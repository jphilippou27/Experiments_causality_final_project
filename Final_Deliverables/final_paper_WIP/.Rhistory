## associate each user record with singular values
users.sv <- users[,c("userid","age","gender","occupation","state","lat","lon")]
for(i in 1:40) {
svname <- paste("SV",i,sep="")
users.sv[,svname] <- S$u[,i]
}
install.packages("zipcode")
## Code Block 4
## Read in user data
users <- read.table(
"http://files.grouplens.org/datasets/movielens/ml-100k/u.user",
header=FALSE,sep="|",
col.names=c("userid","age","gender","occupation","zip"),
colClasses=c(userid="integer",age="integer",gender="factor",occupation="factor",zip="character"))
## figure out where the users are based on latitude and longitude
library("zipcode")
users$cleanZip <- clean.zipcodes(users$zip)
data(zipcode)
users$state <- as.factor(zipcode[match(users$cleanZip,zipcode$zip),'state'])
users$lat <- zipcode[match(users$cleanZip,zipcode$zip),'latitude']
users$lon <- zipcode[match(users$cleanZip,zipcode$zip),'longitude']
## associate each user record with singular values
users.sv <- users[,c("userid","age","gender","occupation","state","lat","lon")]
for(i in 1:40) {
svname <- paste("SV",i,sep="")
users.sv[,svname] <- S$u[,i]
}
## Code Block 6
library(swamp)
conf <- confounding(users.sv)
conf.p <- conf$p.value
conf.p[conf.p < 10^-20] <- 10^-20
conf.p <- log10(conf.p)
conf.p2 <- conf.p[,grep("SV",colnames(conf.p))]
conf.p2 <- conf.p2[!grepl("SV",rownames(conf.p2)),]
par(mar=c(7,15,10,5))
image(1:ncol(conf.p2),1:nrow(conf.p2),t(conf.p2),
axes=FALSE,xlab='',ylab='',col=heat.colors(50))
axis(2,1:nrow(conf.p2),rownames(conf.p2),las=2)
axis(3,1:ncol(conf.p2),colnames(conf.p2),las=2)
segments(x0=.5,x1=ncol(conf.p2)+.5,y0=(0:nrow(conf.p2))+.5)
segments(x0=(0:ncol(conf.p2))+.5,y0=.5,y1=nrow(conf.p2)+.5)
boxplot(split(users.sv$SV3,users.sv$gender),notch=TRUE)
plot(users.sv$lon,users.sv$lat,col=cfun(users.sv$SV24))
}
####################################################
## Code block 8
## Correlate with genre and date
## read in genre info
genres.df <- read.table("http://files.grouplens.org/datasets/movielens/ml-100k/u.genre",col.names=c("genre","genre.id"),sep="|")
movies.df <- read.table("http://files.grouplens.org/datasets/movielens/ml-100k/u.item",sep="|",quote="")
genres <- as.character(genres.df$genre)
colnames(movies.df) <- c("movieid","title","date","vdate","imdb",genres)
movies.df$date <- as.Date(as.character(movies.df$date),format="%d-%b-%Y")
movies.df$title <- as.character(movies.df$title)
## heatmap by genre + date
cor.matrix <- matrix(data=0,nrow=length(genres)+1,ncol=ncol(S$v))
colnames(cor.matrix) <- paste("SV",1:ncol(S$v),sep="")
rownames(cor.matrix) <- c(genres,'date')
cor.matrix.p <- cor.matrix
colnames(S$v) <- paste("SV",1:ncol(S$v),sep="")
for(SV in paste("SV",1:ncol(S$v),sep="")) {
for(g in genres) {
cor.matrix[g,SV] <- cor(S$v[,SV],movies.df[,g])
cor.matrix.p[g,SV] <- t.test(S$v[,SV] ~ movies.df[,g])$p.value
}
cor.matrix['date',SV] <- cor(S$v[,SV],as.numeric(movies.df$date),use='pairwise.complete',method='spearman')
cor.matrix.p['date',SV] <- cor.test(S$v[,SV],as.numeric(movies.df$date),use='pairwise.complete',method='spearman')$p.value
}
## correct for multiple hypotheses
cor.matrix.p <- matrix(p.adjust(cor.matrix.p),nrow=nrow(cor.matrix),ncol=ncol(cor.matrix))
par(mar=c(10,10,5,4))
## plot the heatmap
image(1:ncol(cor.matrix),1:nrow(cor.matrix),t(cor.matrix),zlim=c(-.38,.38),
col=colorpanel(100,'blue','white','red'),axes=FALSE,xlab='',ylab='')
axis(2,1:nrow(cor.matrix),rownames(cor.matrix),las=2)
axis(1,1:ncol(cor.matrix),colnames(cor.matrix),las=2)
segments(x0=.5,x1=ncol(cor.matrix)+.5,y0=(0:nrow(cor.matrix))+.5)
segments(x0=(0:ncol(cor.matrix))+.5,y0=.5,y1=nrow(cor.matrix)+.5)
for(i in 1:nrow(cor.matrix.p)) {
for(j in 1:ncol(cor.matrix.p)) {
if(cor.matrix.p[i,j] < .05) {
points(j,i,pch="*")
}
}
}
heights <- read.csv("GaltonFamilies.csv")
library(ggplot2)
#histogram
heights.gg <- ggplot(heights, aes(childHeight)) + theme(legend.position = "none")
heights.gg + geom_histogram(binwidth = 0.4 ) + labs(x = "Height", y = "Frequency")
#scatter
heights.cc <- ggplot(heights, aes(childHeight, midparentHeight))
heights.cc + geom_point()
heights.cc + geom_point(aes(colour = childNum))
heights.cc + geom_point(aes(colour = gender))
#box and whiskers
heights.bb <- ggplot(heights, aes(childHeight)) + theme(legend.position = "none")
heights.bb <- ggplot(heights, aes(factor(gender), childHeight))
heights.bb + geom_boxplot()
#density
heights.gg + geom_density() + labs(x = "Height", y = "Frequency")
heights.gg + geom_density(aes(fill=factor(gender)), size=2)
heights.gg + geom_density(aes(fill=factor(childNum)), size=2)
heights <- read.csv("GaltonFamilies.csv")
library(ggplot2)
#histogram
heights.gg <- ggplot(heights, aes(childHeight)) + theme(legend.position = "none")
heights.gg + geom_histogram(binwidth = 0.4 ) + labs(x = "Height", y = "Frequency")
#scatter
heights.cc <- ggplot(heights, aes(childHeight, midparentHeight))
heights.cc + geom_point()
heights.cc + geom_point(aes(colour = childNum))
heights.cc + geom_point(aes(colour = gender))
#box and whiskers
heights.bb <- ggplot(heights, aes(childHeight)) + theme(legend.position = "none")
heights.bb <- ggplot(heights, aes(factor(gender), childHeight))
heights.bb + geom_boxplot()
#density
heights.gg + geom_density() + labs(x = "Height", y = "Frequency")
heights.gg + geom_density(aes(fill=factor(gender)), size=2)
heights.gg + geom_density(aes(fill=factor(childNum)), size=2)
install.packages("ggplot2")
library(ggplot2)
#histogram
heights.gg <- ggplot(heights, aes(childHeight)) + theme(legend.position = "none")
heights.gg + geom_histogram(binwidth = 0.4 ) + labs(x = "Height", y = "Frequency")
#scatter
heights.cc <- ggplot(heights, aes(childHeight, midparentHeight))
heights.cc + geom_point()
heights.cc + geom_point(aes(colour = childNum))
heights.cc + geom_point(aes(colour = gender))
#box and whiskers
heights.bb <- ggplot(heights, aes(childHeight)) + theme(legend.position = "none")
heights.bb <- ggplot(heights, aes(factor(gender), childHeight))
heights.bb + geom_boxplot()
#density
heights.gg + geom_density() + labs(x = "Height", y = "Frequency")
heights.gg + geom_density(aes(fill=factor(gender)), size=2)
heights.gg + geom_density(aes(fill=factor(childNum)), size=2)
#plyr example
# Taken from http://svitsrv25.epfl.ch/R-doc/library/plyr/html/ddply-5k.html
## Load Plyr
library(plyr)
## find the number of entries per year
ddply(baseball, .(year), "nrow")
## find the number of rows and number of columns (explanatory variables) per league
ddply(baseball, .(lg), c("nrow", "ncol"))
## temporary function to calculate the mean of an RBI column of a data frame
mean_rbi <- function(df) mean(df$rbi, na.rm=TRUE)
## Mean number of RBIs per year
rbi <- ddply(baseball, .(year), mean_rbi)
## with() is a convention that instructs R to look for variables as columns as a data frame
with(rbi, plot(year, V1, type="l"))
## Mean number of RBIs per year (but with a named function, note the quotes)
rbi <- ddply(baseball, .(year), "mean_rbi")
with(rbi, plot(year, mean_rbi, type="l"))
## Temporary function to calculate mean number of RBIs given
##  as a vector with additional arguments
mean_rbi <- function(rbi, ...) mean(rbi, na.rm=TRUE)
rbi <- ddply(baseball, .(year), splat(mean_rbi))
## averages of each column per year
ddply(baseball, .(year), numcolwise(mean), na.rm=TRUE)
## what if we wanted to know which year of a player's career each
##  record refers to?
base2 <- ddply(baseball, .(id), function(df) {
transform(df, career_year = year - min(year) + 1)
})
#################################################
## read data
mlb.df <- read.table("http://www.amstat.org/publications/jse/datasets/MLBattend.dat.txt")
## clean data
colnames(mlb.df) <- c("team","league","div","season","attendance","runs.scored","runs.allowed","wins","losses","games.back")
mlb.df$season <- as.integer(mlb.df$season) + 1900
mlb.df[mlb.df$season == 1900,'season'] <- 2000
## how many runs were scored per division?
mean.runs.scored <- function(df) { mean(df$runs.scored) }
ddply(mlb.df, .(div), "mean.runs.scored")
## how many runs were scored per division & season? Store in dataframe div.season.df
div.season.df <- ddply(mlb.df, .(div,season), "mean.runs.scored")
head(div.season.df)
## plot in ggplot
g <- ggplot(data=div.season.df, aes(x=season,y=mean.runs.scored,color=div))
g + geom_line()
install.packages("plyr")
library(plyr)
## find the number of entries per year
ddply(baseball, .(year), "nrow")
library(plyr)
## find the number of entries per year
ddply(baseball, .(year), "nrow")
## find the number of rows and number of columns (explanatory variables) per league
ddply(baseball, .(lg), c("nrow", "ncol"))
install.packages("tm")
library("tm")
install.packages("slam")
install.packages("slam")
library(tm)
install.packages('Rcpp')
library('shiny')
library('Rcpp')
runExample("01_hello")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=174.768, lat=-36.852, popup="The birthplace of R")
m
library('leaflet')
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=174.768, lat=-36.852, popup="The birthplace of R")
m
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=32.437466, lat=-99.738385, popup="The birthplace of R")
m
library('shiny')
m <- leaflet()
m <- addTiles(m)
m <- addMarkers(m, lng=-99.738385, lat=32.437466, popup="The birthplace of R")
m
install.packages("stringi")
install.packages("MiKTex")
knitr::opts_chunk$set(echo = TRUE)
#setwd("C:/Users/Colby/Documents/Berkeley/Statistics/Lab_01")
setwd('C:/Users/Jennifer/Documents/Berkeley/W203/Labs/')
load("ceo_w203.RData")
head(CEO)
#setwd("C:/Users/Colby/Documents/Berkeley/Statistics/Lab_01")
setwd('C:/Users/Jennifer/Documents/Berkeley/W203/Labs/')
load("ceo_w203.RData")
head(CEO)
#setwd("C:/Users/Colby/Documents/Berkeley/Statistics/Lab_01")
setwd('C:/Users/Jennifer/Documents/Berkeley/W203/Labs/')
load("ceo_w203.RData")
head(CEO)
#1. Load in descriptive libraries
library(car)
install.packages("car")
#1. Load in descriptive libraries
library(car)
library(dplyr)
install.packages()
install.packages('dplyr')
#1. Load in descriptive libraries
library(car)
library(dplyr)
library(Hmisc)
install.packages('hmisc')
install.packages('Hmisc')
install.packages("Hmisc")
#1. Load in descriptive libraries
library(car)
library(dplyr)
library(Hmisc)
install.packages('Hmisc')
install.packages('Hmisc',  repos = c(CRAN="https://cran.r-project.org/"))
#1. Load in descriptive libraries
library(car)
library(dplyr)
library(Hmisc)
library(scales)
library(ggplot2)
#1. Load in descriptive libraries
library(car)
library(dplyr)
library(Hmisc)
library(scales)
library(ggplot2)
str(CEO)
describe(CEO)
hist(CEO$salary, breaks = "FD", main = "CEO Salary", xlab = "Salary ($000s)")
# one outlier salary over $3mil (5.3mil)
hist(CEO$age, breaks = "FD", main = "CEO Age", xlab = "Age")
# age roughly normal around 50-60 y.o.
# 96% attended college; 55% attended grad school
hist(CEO$comten, main = "CEO's Company Tenure", xlab = "Years")
# fairly uniform from 0 to 40 years with one outlier above 45 (58)
hist(CEO$ceoten, breaks = "FD", main = "CEO Tenure", xlab = "Years")
# severely right-skewed with 50% <= 5 years tenure
hist(CEO$profits, breaks = "FD", main = "Company Profit", xlab = "Profits ($mil)")
# over 90% of data between $0 and 500mil in profit
hist(CEO$mktval, breaks = "FD", main = "Company Market Value", xlab = "Value ($mil)")
# one negative value (remove?); severe right-skew with over 90% under $10BIL in market val
describe(CEO$mktval)
View(CEO)
View(CEO)
#formatted histogram tester
barfill <- "#4271AE"
hist(as.numeric(CEO$ceoten), breaks = "FD", freq = TRUE, main = "CEO Tenure",
xlab = "Years", col = barfill, col.lab = "black", cex.lab = 1)
#scatterplot
plot(CEO$salary, CEO$profits, main = "CEO Salary vs. Company Profits", xlab = "CEO Salary ($000s)", ylab = "Profit ($mil)")
plot(CEO)
names(CEO)
var_num_lst <- c(names(CEO))
install.packages(corrplot)
install.packages('corrplot')
library(corrplot)
install.packages("corrplot")
#setwd("C:/Users/Colby/Documents/Berkeley/Statistics/Lab_01")
setwd('C:/Users/Jennifer/Documents/Berkeley/W203/Labs/')
load("ceo_w203.RData")
head(CEO)
#1. Load in descriptive libraries
library(car)
#1. Load in descriptive libraries
#library(car)
library(dplyr)
#1. Load in descriptive libraries
#library(car)
#library(dplyr)
library(Hmisc)
#1. Load in descriptive libraries
#library(car)
#library(dplyr)
library(Hmisc)
install.packages("car")
install.packages("dplyr")
install.packages("scales")
install.packages("corrplot")
install.packages("ggplot2")
install.packages("Hmisc")
#1. Load in descriptive libraries
library(car)
#1. Load in descriptive libraries
#library(car)
library(dplyr)
library(Hmisc)
#1. Load in descriptive libraries
#library(car)
library(dplyr)
#library(Hmisc)
library(scales)
#1. Load in descriptive libraries
#library(car)
library(dplyr)
#library(Hmisc)
#library(scales)
library(ggplot2)
#1. Load in descriptive libraries
#library(car)
library(dplyr)
#library(Hmisc)
#library(scales)
#library(ggplot2)
library(corrplot)
library(corrplot)
var_num_lst <- c(names(CEO))
df_correl <- df_pred[,var_num_lst]
library(corrplot)
var_num_lst <- c(names(CEO))
df_correl <- CEO[,var_num_lst]
mcor <- cor(df_correl, use = "pairwise.complete.obs")
mcor
#export results
write.csv(mcor, file="correlations_Num_v1.csv", row.names=TRUE)
cex.before <- par("cex")
par(cex = 0.7)
corrplot(mcor, type="upper",order="hclust",addCoef.col = "black",  tl.col="black",tl.srt=45, tl.cex = 1/par("cex"),
cl.cex = 1/par("cex"))
par(cex = cex.before)
mcor
View(mcor)
View(mcor)
mcor
boxplot(CEO$profits~CEO$salary, data = CEO)
boxplot(CEO$profits~CEO$grad, data = CEO)
boxplot(CEO$profits~CEO$grad, data = CEO)
boxplot(CEO$salary~CEO$grad, data = CEO)
hp <- ggplot(CEO,  aes(x=Salary, factor = Grad)) +
geom_histogram(binwidth=500, aes(y=..count/sum(..count..)))+
scale_y_continuous(labels = percent_format()) +
theme(text = element_text(size=16))
install.packages("ggplot")
library(ggplot2)
hp <- ggplot(CEO,  aes(x=Salary, factor = Grad)) +
geom_histogram(binwidth=500, aes(y=..count/sum(..count..)))+
scale_y_continuous(labels = percent_format()) +
theme(text = element_text(size=16))
knitr::opts_chunk$set(echo = TRUE, fig.width=6, fig.height=4)
library(BSDA)
library(car)
library(effsize)
library(Hmisc)
library(lmtest)
library(sandwich)
library(stargazer)
require(dplyr)
#require(foreign)
require(ggplot2)
#require(MASS)
require(Hmisc)
#require(reshape2)
#require(pander)
#wd <- setwd("/Users/Colby/Documents/Berkeley/203_Statistics/Lab_04")
# wd <- setwd("C:/Users/N0209810/Documents/Personal/Grad SChool/Courses/W203_stats")
setwd("~/Berkeley/W203/Labs")
raw_data <- read.csv("crime.csv")
head(raw_data)
describe(raw_data)
#Label missing region as its own column and cross compare with urban dummy:
table(raw_data$west, raw_data$central) #shows there should be 3 factors
raw_data$missingLabel = ifelse(raw_data$west ==0 & raw_data$central==0,1,0)
table(raw_data$west, raw_data$urban) #shows urban overlaps with regions, west mostly not urban
table(raw_data$central, raw_data$urban) #central has the most urban
table(raw_data$missingLabel, raw_data$urban)# other region in between the other two
par(mfrow = c(2,4))
hist(raw_data$crmrte, breaks = 30, main = "Crimes per Person")
# hist(sqrt(raw_data$crmrte), breaks = 30, main = "Sq-Root of Crimes/Person")
hist((raw_data$prbarr), breaks = 30, main = "Arrest Ratio")
hist((raw_data$prbconv), breaks = 30, main = "Conviction Ratio")
hist(sqrt(raw_data$prbconv), breaks = 30, main = "Sq. Root(Conviction Ratio)")
hist(raw_data$prbpris, breaks = 30, main = "Prison Ratio")
hist(raw_data$avgsen, breaks = 30, main = "Avg. Sentence (Days)")
hist(raw_data$polpc, breaks = 30, main = "Police per Capita")
hist(raw_data$taxpc, breaks = 30, main = "Tax Rev. per Capita")
hist(raw_data$density, breaks = 30, main = "People per Sq. Mile")
hist(raw_data$pctmin80, breaks = 30, main = "Percent Minority (1980)")
hist(raw_data$mix, breaks = 30, main = "Offense Mix")
hist(raw_data$pctymle, breaks = 30, main = "Percent Young Male")
#Remove record with top coded variable (like done in the batting averages example 13.12)
raw_data$removalFlag = ifelse(raw_data$county == "55",1, #taxpayer
ifelse(raw_data$county == "133",1, #pctmale
ifelse(raw_data$county == "115",1, 0))) #polpc
raw_data = subset(raw_data, raw_data$removalFlag !=1)
# crimes per person: 0.005 to 0.1; right skew, consider sqrt()
# probability of arrest: 0.09 to 1.09, right skew
# probability of conviction: .07 to 2.12, right skew
# probability of prison: 0.15 to 0.6, fairly normal
# avg. sentence: 5 to 20 days w right skew
# offense mix (face on / other): right skew
# tax per cap: right skew
# percent minority (1980): somewhat uniform/slight right tail
#Dropping service wage outlier due to likely data entry error or extremely low desity/population influence:
par(mfrow = c(2,5))
hist((raw_data$wcon), breaks = 30, main = "Construction Wage")
#hist(sqrt(raw_data$wcon), breaks = 30, main = "Sq-Root of Contstruction Wage")
hist((raw_data$wfed), breaks = 30, main = "Wage Federal Workers")
hist((raw_data$wfir), breaks = 30, main = "Finance/Insur/Real Estate")
hist((raw_data$wmfg), breaks = 30, main = "Manufacturing Wage")
hist(log(raw_data$wmfg), breaks = 30, main = "Log(Manufacturing Wage)")
hist((raw_data$wser), breaks = 30, main = "Wage of Service Workers")
hist((raw_data$wloc), breaks = 30, main = "Wage Local Gov.")
hist((raw_data$wsta), breaks = 30, main = "Wage State Workers")
hist((raw_data$wtrd), breaks = 30, main = "Wage Retail")
hist((raw_data$wtuc), breaks = 30, main = "Wage Trans/Util/Comm")
raw_data$wser[84] = NA
scatterplotMatrix(raw_data[c(4:11,15:17)])
scatterplotMatrix(raw_data[c(4, 18:26)])
correlationMatrix = round(cor(raw_data[c(4:26)], use="pairwise.complete.obs"),2)
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{   usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y,use="pairwise.complete.obs"))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)}
pairs(~crmrte +polpc + density + avgsen + prbarr +prbconv +prbpris + taxpc + pctymle + pctmin80 + mix + wcon +wtuc + wtrd + wfir+ wser +wmfg +wfed +wsta +wloc, data=raw_data, upper.panel=panel.cor, pch=20,  main="Crime Variables Correlation Scatterplot Matrix")
model1 = lm(crmrte ~polpc + avgsen + prbarr + prbconv + prbpris + density + urban + (polpc * urban) +
(avgsen * urban) + (prbarr * urban) + (prbconv * urban) + (prbpris * urban), data=raw_data)
summary(model1)
test_resids <- data.frame(model1$fitted.values,model1$residuals, raw_data$urban)
par(mfrow = c(1,2))
plot(model1, which = 1)
plot(model1, which = 5)
#NEED TO REFORMAT PEARSON RESIDUAL PLUTS SO THE LEFT AXIS SCALES ARE MORE CLEAR--I CONTINUE TO BE TERRIBLE AT FORMATTING CHARTS IN R (CMC)
residualPlots(model1)
plot(model1, which = 2)
acf(model1$residuals)
pacf(model1$residuals)
model1_excl <- lm(crmrte ~polpc + avgsen + prbarr + prbconv + prbpris + density + urban, data=raw_data)
summary(model1_excl)
stargazer(model1, model1_excl, type = "text", report = "vcs*",
header = FALSE,
title = "Comparison of Key Crime Determinants Only",
star.cutoffs = c(0.05, 0.01, 0.001))
anova(model1, model1_excl)
model1_trans = lm(crmrte ~sqrt(polpc) + sqrt(avgsen) + prbarr + sqrt(prbconv) + prbpris + sqrt(density) +
urban + ((polpc) * urban) + ((avgsen) * urban) + (prbarr * urban) +
((prbconv) * urban) + (prbpris * urban), data=raw_data)
summary(model1_trans)
par(mfrow = c(1,2))
plot(model1_trans, which = c(1,2))
anova(model1, model1_trans)
# ?waldtest
# waldtest(model1, model1_trans, vcov = vcovHC)
model2 = lm(crmrte ~polpc + avgsen + prbarr + prbconv + prbpris + density + urban + (polpc * urban) +
(avgsen * urban) + (prbarr * urban) + (prbconv * urban) + (prbpris * urban) + taxpc + west + central + pctymle + pctmin80 + mix + missingLabel, data=raw_data)
model2
summary(model2)
model2_rest <- lm(crmrte ~polpc + avgsen + prbarr + prbconv + prbpris + density + urban + (polpc * urban) +
(avgsen * urban) + (prbarr * urban) + (prbconv * urban) + (prbpris * urban) + taxpc + west+ central + pctymle + pctmin80 + mix + (west*polpc)+ (central*polpc) + (central * mix) + (west*mix) + (urban*mix) + (urban*taxpc) + (taxpc+west), data=raw_data)
summary(model2_rest)
stargazer(model1, model2, model2_rest, type = "text", report = "vcs*",
header = FALSE,
title = "Comparison of Key Crime Determinants Only",
star.cutoffs = c(0.05, 0.01, 0.001))
anova(model1, model2)
anova(model2, model2_rest )
#test_resids <- data.frame(model1$fitted.values,model1$residuals, raw_data$urban)
par(mfrow = c(2,3))
plot(model2, which = c(1,2,3,5))
acf(model2$residuals)
pacf(model2$residuals)
residualPlots(model2)
getwd()
setwd("~/Berkeley/W241/Experiment/Final_Deliverables/final_paper_WIP")
